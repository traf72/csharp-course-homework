using System.Globalization;

// Сохранение исходной культуры в переменную, чтобы была возможность вернуть её обратно.
// Будет необходимо в некоторых заданиях.
CultureInfo originalCulture = CultureInfo.CurrentCulture;


/******************************************************************
    1. Определите, равны ли два идентификатора ниже.
         1.1. С учётом регистра.
         1.2. Без учёта регистра.

       Приведите несколько вариантов, если они возможны.
******************************************************************/

string id1 = "aB3x9Yz12Q";
string id2 = "ab3x9yz12q";


/*******************************************************************************************************************************
    2. Вы отлаживаете неприятный баг. Вы сравниваете две строки. Одна приходит к вам из базы данных, а другая от пользователя.
       В отладчике вы чётко видите, что строки одинаковые, но при сравнении получаете "False". В чём может быть причина?
       Какие есть варианты исправления?
*******************************************************************************************************************************/

string pancakeFromUser = "crêpe";       // Означает слово "блин" по-французски
string pancakeFromDb = "cre\u0302pe";   // То же самое, но закодировано по-другому


/******************************************************************************************************************************
    3. Ваша программа проверяет, является ли файл иконкой или нет, и выполняет какую-то логику на основе этого. Вы просто
       проверяете, имеет ли файл расширение ".ico". Вы выполняете данную проверку без учёта регистра. Ваше приложение
       мультиязычное. Всё было хорошо до тех пор, пока вы не развернули его в Турции. Для некоторых файлов расширение вдруг
       начало определяться неверно. В чём может быть причина и как это можно исправить?
******************************************************************************************************************************/

string fileName = "Arrow.ICO";

Console.WriteLine(IsIcon(fileName)); // True - верно, так как файл имеет расширение ".ico".

// Меняем культуру на турецкую.
CultureInfo.CurrentCulture = new CultureInfo("tr-TR");

Console.WriteLine(IsIcon(fileName)); // False - неверно, так как файл имеет расширение ".ico".

static bool IsIcon(string fileName)
{
    return fileName.EndsWith(".ico", true, null);
}

// Восстановление изначальной культуры, чтобы она не влияла на следующие задания.
CultureInfo.CurrentCulture = originalCulture;


/******************************************************************************************************************************
    4. В вашем приложении, когда пользователь печатает в текстовом поле, вам нужно автоматически приводить текст к верхнему
       регистру. Вы написали функцию "ToUpperCase" (см. код ниже), которая принимает в себя текст и возвращает его в верхнем
       регистре. Ваше приложение мультиязычное. Через какое-то время вы начинаете получать жалобы от пользователей некоторых
       стран, что приведение к верхнем регистру для некоторых символов работает неверно.
       В чём может быть причина и как это можно исправить?
******************************************************************************************************************************/

string ToUpperCase(string text)
{
    return text.ToUpperInvariant();
}


/*********************************************************************************************************
    5. У вас объявлены два символа. Вы пытаетесь их сравнить, но почему-то получаете ошибку компиляции.
       В чём причина? Предложите варианты исправления:
         5.1. Если вам разрешено изменять тип исходных переменных.
         5.2. Если вам не разрешено изменять тип исходных переменных.
*********************************************************************************************************/

var symbol1 = "x";
var symbol2 = "b";

//Console.WriteLine(symbol1 > symbol2);  // Ошибка компиляции


/************************************************************************************************************
    6. Вам необходимо сравнить две строки ниже на равенство без учёта регистра именно в испанской культуре.
       Но вы не хотите менять культуру на уровне приложения. Как вы можете это сделать?
       Испанская культура обозначается как "es-ES".
************************************************************************************************************/

string expectedText = "Ver Conexión";
string actualText = "ver conexión";


/*************************************************************************************************************************************
    7. У вас есть массив строк. Вам необходимо произвести его сортировку.
         7.1. С учётом текущей культуры.
         7.2. Вообще без учёта каких-либо лингвистических особенностей символов, то есть, по их кодам в таблице Unicode.
         7.3. С учётом лингвистических особенностей символов, но без учёта конкретной культуры. То есть, результат
              сортировки не должен меняться при запуске с различными культурами.

       Во всех вариантах регистр должен учитываться.
       Выведите в консоль результаты каждой сортировки. Для вывода используйте метод "string.Join" из урока с разделителем ", ".
       Есть ли различия? Если консоль не может отобразить некоторые символы корректно, проверьте результаты в отладчике.
       Попробуйте теперь сменить культуру на шведскую "sv-SE". Появятся ли какие-то ещё различия?
       Смените культуру обратно на исходную.
*************************************************************************************************************************************/

string[] words = ["Cat", "dog", "apple", "Æble", "wink", "able", "Table", "ångström"];


/********************************************************************************************************************************
    8. У вас объявлена переменная, содержащая цену Bitcoin. Вам необходимо вывести в консоль строку
       "Bitcoin price is {price}" в различных форматах и культурах.
         8.1. В текущей культуре в формате с разделителями групп разрядов и четырьмя знаками после запятой.
              После самой цены также необходимо добавить знак доллара. Например, для русской культуры
              результат должен быть:                              "Bitcoin price is 71 423,4826 $"
         8.2. Аналогично пункту 8.1, но в культуре США:           "Bitcoin price is 71,423.4826 $"
         8.3. Аналогично пункту 8.1, но в культуре Германии:      "Bitcoin price is 71.423,4826 $"
         8.4. Аналогично пункту 8.1, но в инвариантной культуре:  "Bitcoin price is 71,423.4826 $"
         8.5. Примените стандартный для США денежный формат вывода (спецификатор "С"). Культура должна быть также США.
              То есть, результат должен быть: "Bitcoin price is $71,423.48"

       Ссылки на спецификаторы форматирования чисел:
         https://learn.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings#standard-format-specifiers
         https://learn.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings
*********************************************************************************************************************************/

decimal bitcoinPrice = 71423.482564m;


/******************************************************************************************************
    9. У вас объявлена переменная, которая отражает концентрацию CO2 в миллионных долях (ppm).
       Вам необходимо вывести в косноль строку "CO2 concentration is {concentration} ppm".
       Формат должен быть без разделителей групп разрядов с тремя знаками после запятой.
         9.1. В текущей культуре, например, для РФ это будет:  "CO2 concentration is 4123,450 ppm"
         9.2. В культуре США:                                  "CO2 concentration is 4123.450 ppm"
         9.3. В культуре Германии:                             "CO2 concentration is 4123,450 ppm"
         9.4. В инвариантной культуре:                         "CO2 concentration is 4123.450 ppm"
******************************************************************************************************/

double co2Concentration = 4123.45;


/*******************************************************************************************************************************
    10. У вас объявлена переменная, которая отражает годовую доходность в долях единицы, то есть, например, 0.127
        означает 12.7%. Вам необходимо вывести в консоль строку "Annual profit is {profit} %". Но значение должно
        отображаться именно в процентах с одним знаком после запятой.
          10.1. В текущей культуре, например, для РФ это будет:  "Annual profit is 12,7 %"
          10.2. В культуре США:                                  "Annual profit is 12.7%"
          10.3. В культуре Германии:                             "Annual profit is 12.7 %"
          10.4. В инвариантной культуре:                         "Annual profit is 12.7 %"
********************************************************************************************************************************/

decimal annualProfit = 0.127m;


/**************************************************************************************************************************************
    11. Вам дана дата. Для каждого из форматов ниже выведите её в четырёх различных культурах: текущей, США, немецкой, инвариантной.
        Примеры приведены для культуры США. Для других культур вывод может отличаться.
          11.1. Только месяц и число:                         March 9
          11.2. Только время в формате часы:минуты:           7:42 PM
          11.3. Только год и месяц:                           March 2024
          11.4. Полностью дата и время (без секунд):          Saturday, March 9, 2024 7:42 PM
          11.5. Сокращённый день недели и число:              Sat, 9
          11.6. Только месяц:                                 March
          11.7. Дата в формате ISO 8601:                      2024-03-09T19:42:57.4320000
                Зависит ли вывод даты в данном формате от культуры? Как вы думаете, почему?

        Ссылки на спецификаторы форматирования дат:
          https://learn.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings
          https://learn.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings
**************************************************************************************************************************************/

DateTime date = new(2024, 3, 9, 19, 42, 57, 432);


/***************************************************************************************************************************************
    12. В своём приложении вам необходимо считывать как целые, так и дробные числа от пользователей. Вы хотите использовать точный
        формат ввода, чтобы он не зависел от региональных параметров пользователя. В качестве разделителя групп разрядов должна
        использоваться "," или он должен отсутствовать, а разделителем целой и дробной части должна выступать ".".
        Какой самый простой способ это сделать?
        Напишите ниже код, который считывает число с консоли в описанном выше формате и преобразует его в тип "double".
        Выведите считанное число обратно в консоль.
        Протестируйте своё решение как на целых, так и на дробных числах. Как с разделителем групп разрядов, так и без.
***************************************************************************************************************************************/


/***************************************************************************************************************************************
    13. Считайте с консоли дату 2024-03-09 19:42:57 в различных культурах. Определите верный формат ввода для каждой культуры:
          13.1. Текущей.
          13.2. Культуры США.
          13.3. Инвариантной.
***************************************************************************************************************************************/


/***************************************************************************************************************************************
    14*. Возможно вы заметили, что все встроенные компараторы сортируют строки по возрастанию. Но что если мы хотим отсортировать
         по убыванию? Первый вариант - это написать свой компаратор. Так как мы ещё не разбирали написание компараторов подробно,
         то его структура уже написана. Вам осталось только верно реализовать метод "Compare". В коде ниже реализована заглушка,
         которая всегда возвращает 0, а значит все строки будут считаться равными, и сортировки, как таковой, происходить не будет.
         Реализуйте верно метод "Compare", чтобы  строки на выходе были отсортированы по убыванию.

         Подумайте, можно ли добиться сортировки строк по убыванию, не реализуя свой собственный компаратор, а пользуясь только
         стандартными компараторами и методами класса "Array"?
***************************************************************************************************************************************/

{
    string[] stringArray = ["dog", "zero", "cat", "year"];
    Array.Sort(stringArray, new CurrentCultureDescendingComparer());
    Console.WriteLine(string.Join(", ", stringArray));  // Ожидается: zero, year, dog, cat 
}

class CurrentCultureDescendingComparer : IComparer<string>
{
    public int Compare(string str1, string str2)
    {
        // Реализуйте верно метод "Compare". Строки должны сортироваться по убыванию в текущей культуре.
        return 0;
    }
}
