/*****************************************************************************
    1. Какой фактический тип имеют данные неявно типизированные переменные?
*****************************************************************************/

var tempareture = 20.5f;
var length = 758934u;
var balance = 1_425_580.54M;
var speed = 120;
var bitFlags = 0b_1010_0001;
var fileSizeInBytes = 74238075234;
var roomsCount = (short)3;
var massOfTheSun = 1.989e30;
var distance = 758934LU;
var memoryAddress = 0xF0423AC5F;
var interestRate = 0.035;
var electronCharge = -1.602e-19;


/*************************************
    2. Исправьте ошибки компиляции.
*************************************/

float rate = 12.5;
decimal cash = 525.3;
byte grade = 5u;
long distanceToAlphaCentauri = 4.37e16;
int percentage = 80.0;


/*********************************************************************************************************
    3. Вы вычисляете среднюю скорость автомобиля. Вам дано расстояние в км и время в часах.
       Но почему-то ваш результат обрезается до целого числа. В чём проблема? Как это можно исправить?
*********************************************************************************************************/

int distanceToCityInKm = 230;
int timeInHours = 4;
var averageSpeed = distanceToCityInKm / timeInHours;
Console.WriteLine($"Средняя скорость: {averageSpeed} км/ч");


/*********************************************************************************************************************************
    4. Вам дано целое число, и вам необходимо определить, кратно ли оно 3-м. Какую арифметическую операцию вы бы использовали?
*********************************************************************************************************************************/
int num = 4238445;


/*******************************************************************************************************
    5. Объявите переменную "x", равную 25. Декрементируйте её 3 раза, и инкрементируйте два раза.
       Используйте разные формы инкремента и декремента. Выведите в консоль получившийся результат.
*******************************************************************************************************/


/*********************************************************************************************************
    6. Я ожидаю в консоли 9, но почему-то получаю 8. Почему? Предложите несколько вариантов исправления.
*********************************************************************************************************/

int y = 8;
int z = y++;
Console.WriteLine(z);


/*******************************************************************
    7. Исправьте выражения, чтобы получился ожидаемый результат.
*******************************************************************/

Console.WriteLine(10 + 5 * 2);     // Ожидается 30, а выводится 20
Console.WriteLine(100 / 2 + 8);    // Ожидается 10, а выводится 58
Console.WriteLine(50 / (5 * 10));  // Ожидается 100, а выводится 1
Console.WriteLine(30 % 4 * 2);     // Ожидается 6, а выводится 4

int k = 5;
Console.WriteLine(k++ + 10 / 2);   // Ожидается 11, а выводится 10


/**********************************
    8. Упростите присваивание.
**********************************/

int a = 15;
double b = -7.8;
float c = 15.6f;
long d = -43289L;

a = a * 83;
b = b - 234.523;
c = c + 56.32f;
d = d % 45;


/*********************************************************************************************************************
    9. Чему будет равна каждая из переменных после последнего присваивания?
       Несмотря на то что последнее присваивание это полностью валидный C# код, писать так на практике не стоит,
       так как это очень запутывает разработчиков. Упростите данное присваивание.
*********************************************************************************************************************/

int e = 16;
int f = 25;
int g = e += f -= 5;


/************************************************************************************************************
    10. Вы вычисляете длину окружности радиусом R, а затем сравниваете её с референсным значением.
        Если посчитать длину на калькуляторе, то видно, что она в точности совпадает с эталоном.
        Но тем не менее в консоли выводится, что они не равны.
        В чём причина?
        Как можно исправить данную ситуацию, если погрешность, с которой вы готовы мириться, равна 0.00001?
************************************************************************************************************/

double radiusInMeters = 1.6;
double circleLength = 2 * 3.14 * radiusInMeters;
double referenceLength = 10.048;
bool areEqual = circleLength == referenceLength;

Console.WriteLine($"Matches the reference value: {(areEqual ? "Yes" : "No")}");
